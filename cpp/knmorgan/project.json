{
  "id": "cpp/knmorgan",
  "name": "ws",
  "authors": ["Kyle Morgan"],
  "license": "GPL-3.0-or-later",
  "languages": ["C++"],
  "tags": ["interpreter", "programs"],
  "date": "2012-12-29 00:19:16 -0500",
  "spec_version": "0.3",
  "source": ["https://github.com/knmorgan/ws"],
  "submodules": [{ "path": "ws", "url": "https://github.com/knmorgan/ws" }],
  "bounds": { "precision": "arbitrary" },
  "whitespace": { "extension": "ws" },
  "assembly": {
    "mnemonics": {
      "push": "PUSH",
      "dup": "DUPLICATE",
      "copy": "COPY_NTH",
      "swap": "SWAP",
      "drop": "DISCARD",
      "slide": "SLIDE",
      "add": "ADD",
      "sub": "SUB",
      "mul": "MUL",
      "div": "DIV",
      "mod": "MOD",
      "store": "STORE",
      "retrieve": "RETRIEVE",
      "label": "MARK",
      "call": "CALL",
      "jmp": "JUMP",
      "jz": "JUMPIFZ",
      "jn": "JUMPIFN",
      "ret": "RETURN",
      "end": "EXIT",
      "printc": "OUTC",
      "printi": "OUTN",
      "readc": "READC",
      "readi": "READN"
    },
    "usage": ["enum"]
  },
  "programs": [
    { "path": "examples/calc.ws", "equivalent": "calc.ws", "spec_version": "0.2" },
    { "path": "examples/count.ws", "equivalent": "count.ws", "spec_version": "0.2" },
    { "path": "examples/fact.ws", "equivalent": "fact.ws", "spec_version": "0.2" },
    { "path": "examples/hanoi.ws", "equivalent": "hanoi.ws", "spec_version": "0.2" },
    { "path": "examples/hworld.ws", "equivalent": "hworld.ws", "spec_version": "0.2" },
    { "path": "examples/name.ws", "equivalent": "name.ws", "spec_version": "0.2" },
    { "path": "examples/quine.ws", "equivalent": "quine.ws", "spec_version": "0.2" },
    { "path": "examples/yaq.ws", "spec_version": "0.2" }
  ],
  "commands": [
    {
      "type": "interpreter",
      "bin": "ws",
      "usage": "[-v | --version] [-h | --help] [-s <size> | --stack-size <size>] <file>",
      "options": [
        { "short": "v", "long": "version", "desc": "Print version and copyright" },
        { "short": "h", "long": "help", "desc": "Print usage" },
        {
          "short": "s",
          "long": "stack-size",
          "arg": "size",
          "type": "C++ unsigned long",
          "default": 1000000,
          "desc": "Set stack limit"
        }
      ],
      "option_parse": "manual"
    }
  ]
}
