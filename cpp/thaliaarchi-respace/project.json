{
  "id": "cpp/thaliaarchi-respace",
  "name": "Respace",
  "authors": ["Thalia Archibald"],
  "license": "MIT",
  "languages": ["C++"],
  "tags": ["interpreter", "assembler", "disassembler", "bit packer", "Binary Whitespace", "programs"],
  "date": "2018-04-15 21:35:34 -0600",
  "spec_version": "0.3",
  "source": ["https://github.com/thaliaarchi/respace"],
  "relations": [{ "id": "javascript/vii5ard-whitelips-ide", "type": "assembly" }],
  "bounds": { "precision": "fixed" },
  "whitespace": { "extension": "ws" },
  "assembly": {
    "mnemonics": {
      "push": ["push"],
      "dup": ["dup"],
      "copy": ["copy"],
      "swap": ["swap"],
      "drop": ["drop"],
      "slide": ["slide"],
      "add": ["add"],
      "sub": ["sub"],
      "mul": ["mul"],
      "div": ["div"],
      "mod": ["mod"],
      "store": ["store"],
      "retrieve": ["retrieve"],
      "label": ["label_<number>:"],
      "call": ["call"],
      "jmp": ["jmp"],
      "jz": ["jz"],
      "jn": ["jn"],
      "ret": ["ret"],
      "end": ["end"],
      "printc": ["printc"],
      "printi": ["printi"],
      "readc": ["readc"],
      "readi": ["readi"],
      "dumpstack": ["debug_printstack"],
      "dumpheap": ["debug_printheap"]
    },
    "macros": [
      { "name": "@include", "args": ["string"] },
      { "name": "@define", "args": ["ident", "value"] },
      { "name": "@ifdef", "args": ["ident"] },
      { "name": "@else" },
      { "name": "@endif" }
    ],
    "instruction_delimiter": ";",
    "instruction_wrap": false,
    "indentation": "    ",
    "usage": ["assembler", "disassembler", "programs"],
    "extension": "wsa",
    "notes": "Extends Whitelips syntax with preprocessor directives and `;` instruction delimiters. Allows all C preprocessor directives, with the `#` replaced with `@`."
  },
  "programs": [
    {
      "path": "programs/bottles.instr",
      "generated": "programs/bottles.generated.ws",
      "aux": ["programs/bottles.c", "programs/bottles.wsa"],
      "spec_version": "0.2"
    },
    { "path": "programs/hello-world.ws", "spec_version": "0.2" },
    { "path": "programs/test.ws", "polyglot": ["Whitespace Assembly"], "spec_version": "0.2" },
    {
      "path": "programs/ws-assemble.wsa",
      "generated": "programs/ws-assemble.generated.ws",
      "spec_version": "0.2"
    },
    { "path": "programs/ws-interpret.wsa", "spec_version": "0.2" },
    { "path": "programs/util/print-string.wsa", "spec_version": "0.2" },
    {
      "path": "programs/ws/assembler.wsa",
      "generated": "programs/ws/assembler.generated.ws",
      "spec_version": "0.2"
    },
    { "path": "programs/ws/interpret.wsa", "spec_version": "0.3" },
    {
      "path": "programs/ws/interpreter.wsa",
      "generated": "programs/ws/interpreter.generated.ws",
      "spec_version": "0.2"
    },
    { "path": "programs/ws/loader.wsa", "spec_version": "0.3" },
    { "path": "programs/ws/parse.wsa", "spec_version": "0.2" }
  ],
  "commands": [
    { "type": "interpreter", "bin": "respace", "usage": "<file>" },
    { "type": "interpreter", "bin": "programs/ws/interpreter.wsa" },
    { "type": "assembler", "bin": "programs/preprocess.sh", "usage": "<file> <output>" }
  ],
  "notes": "Disassembler and bit packer are only available via code modification"
}
