{
  "id": "python/molfarua-codewars",
  "name": "CodeWars_Solutions",
  "authors": ["MolfarUA"],
  "license": "GPL-3.0",
  "languages": ["Python", "CoffeeScript", "C++", "Java", "JavaScript", "TypeScript"],
  "tags": ["interpreter"],
  "date": "2021-12-31 01:14:10 +0200",
  "spec_version": "0.3",
  "source": ["https://github.com/MolfarUA/CodeWars_Solutions"],
  "submodules": [{ "path": "CodeWars_Solutions", "url": "https://github.com/MolfarUA/CodeWars_Solutions" }],
  "relations": [
    {
      "id": "python/dalleng",
      "type": "embedded",
      "dest_path": "2 kyu/Whitespace Interpreter/solution.py (5/7)"
    },
    {
      "id": "typescript/fy0u11",
      "type": "embedded",
      "dest_path": "2 kyu/Whitespace Interpreter/solution.ts (4/5)"
    }
  ],
  "challenges": ["Codewars"],
  "assembly": [
    {
      "source": "2 kyu/Whitespace Interpreter/solution.coffee (1/5)",
      "mnemonics": {
        "push": "push",
        "dup": "dupe0",
        "copy": "dupe",
        "swap": "swap",
        "drop": "discard0",
        "slide": "discard",
        "add": "add",
        "sub": "sub",
        "mul": "mul",
        "div": "div",
        "mod": "mod",
        "store": "set",
        "retrieve": "get",
        "label": "label",
        "call": "call",
        "jmp": "jmp",
        "jz": "jz",
        "jn": "jlz",
        "ret": "ret",
        "end": "exit",
        "printc": "outc",
        "printi": "outn",
        "readc": "in_c",
        "readi": "in_n"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.coffee (3/5)",
      "mnemonics": {
        "push": "stack-push",
        "dup": "stack-duplicate",
        "copy": "stack-duplicate-nth",
        "swap": "swap-top-two",
        "drop": "stack-pop",
        "slide": "stack-discard",
        "add": "add",
        "sub": "subtract",
        "mul": "multiply",
        "div": "divide",
        "mod": "modulus",
        "store": "heap-set",
        "retrieve": "heap-get",
        "label": "label",
        "call": "call",
        "jmp": "go",
        "jz": "go-if-zero",
        "jn": "go-if-negative",
        "ret": "exit",
        "end": "exit-program",
        "printc": "output-char",
        "printi": "output-number",
        "readc": "input-char",
        "readi": "input-number"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.coffee (4/5)",
      "mnemonics": {
        "push": "pushStack",
        "dup": "duplicateTopStack",
        "copy": "duplicateNthStack",
        "swap": "swapStack",
        "drop": "popStack",
        "slide": "popNStack",
        "add": "add",
        "sub": "subtract",
        "mul": "multiply",
        "div": "divide",
        "mod": "modulo",
        "store": "popStoreHeap",
        "retrieve": "popPushFromHeap",
        "label": "defineLabel",
        "call": "callSubroutine",
        "jmp": "jumpLabel",
        "jz": "jumpIfZero",
        "jn": "jumpIfNegative",
        "ret": "returnSubroutine",
        "end": "exitProgram",
        "printc": "outputCharacter",
        "printi": "outputNumber",
        "readc": "inputCharacter",
        "readi": "inputNumber"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.coffee (5/5)",
      "mnemonics": {
        "push": "Push",
        "dup": "Duplicate",
        "copy": "Fish",
        "swap": "Swap",
        "drop": "Discard top",
        "slide": "Discard",
        "add": "Add",
        "sub": "Subtract",
        "mul": "Multiply",
        "div": "Divide",
        "mod": "Modulo",
        "store": "Store",
        "retrieve": "Read",
        "label": "Label",
        "call": "Call",
        "jmp": "Jump",
        "jz": "JumpZero",
        "jn": "JumpNegative",
        "ret": "Return",
        "end": "End",
        "printc": "PutChar",
        "printi": "PutNumber",
        "readc": "ReadChar",
        "readi": "ReadNumber"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.cpp (2/3)",
      "mnemonics": {
        "push": "STACK_PSH",
        "dup": "STACK_DUP",
        "copy": "STACK_DUPN",
        "swap": "STACK_SWP",
        "drop": "STACK_POP",
        "slide": "STACK_POPN",
        "add": "MATH_ADD",
        "sub": "MATH_SUB",
        "mul": "MATH_MUL",
        "div": "MATH_DIV",
        "mod": "MATH_MOD",
        "store": "MEM_STORE",
        "retrieve": "MEM_LOAD",
        "label": "FC_LBL",
        "call": "FC_CSR",
        "jmp": "FC_JMP",
        "jz": "FC_JZ",
        "jn": "FC_JN",
        "ret": "FC_RET",
        "end": "FC_END",
        "printc": "IO_OC",
        "printi": "IO_ON",
        "readc": "IO_IC",
        "readi": "IO_IN"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.cpp (3/3)",
      "mnemonics": {
        "push": "Push",
        "dup": "DuplicateTop",
        "copy": "DuplicateNth",
        "swap": "SwapTop",
        "drop": "DiscardTop",
        "slide": "DiscardN",
        "add": "Add",
        "sub": "Sub",
        "mul": "Mul",
        "div": "Div",
        "mod": "Mod",
        "store": "HeapPut",
        "retrieve": "HeapPull",
        "label": "MarkLabel",
        "call": "CallLabel",
        "jmp": "Jump",
        "jz": "IfNot",
        "jn": "IfLt",
        "ret": "Exit",
        "end": "End",
        "printc": "PutChar",
        "printi": "PutInt",
        "readc": "ReadChar",
        "readi": "ReadInt"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.java (3/3)",
      "mnemonics": {
        "push": "push <number>",
        "dup": "dup <number>",
        "copy": "top",
        "swap": "swp",
        "drop": "pop",
        "slide": "popn <number>",
        "add": "add",
        "sub": "sub",
        "mul": "mul",
        "div": "div",
        "mod": "mod",
        "store": "save",
        "retrieve": "load",
        "label": "<label>:",
        "call": "call <label>",
        "jmp": "jump <label>",
        "jz": "jmpz <label>",
        "jn": "jmp <label>",
        "ret": "ret",
        "end": "stop",
        "printc": "out",
        "printi": "outn",
        "readc": "rchr",
        "readi": "rnum"
      },
      "patterns": { "label": "_[st]*", "number": "-?[1-9][0-9]*" },
      "usage": ["debug"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.js (2/4)",
      "mnemonics": {
        "push": "push_n",
        "dup": "duplicate_top",
        "copy": "duplicate_nth",
        "swap": "swap_top",
        "drop": "discard_top",
        "slide": "discard_top_n",
        "add": "b_plus_a",
        "sub": "b_minus_a",
        "mul": "b_times_a",
        "div": "b_div_a",
        "mod": "b_mod_a",
        "store": "a_at_b",
        "retrieve": "a_at_a",
        "label": "mark_label",
        "call": "call_routine",
        "jmp": "jump_unconditionally",
        "jz": "jump_if_zero",
        "jn": "jump_if_less_than_zero",
        "ret": "exit_routine",
        "end": "exit_program",
        "printc": "print_char",
        "printi": "print_num",
        "readc": "read_char",
        "readi": "read_num"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.js (3/4)",
      "mnemonics": {
        "push": "push",
        "dup": "dup",
        "copy": "dup",
        "swap": "swap",
        "drop": "discard",
        "slide": "slide",
        "add": "add",
        "sub": "sub",
        "mul": "mul",
        "div": "div",
        "mod": "mod",
        "store": "stash",
        "retrieve": "unstash",
        "label": "label",
        "call": "call",
        "jmp": "jmp",
        "jz": "jz",
        "jn": "jneg",
        "ret": "ret",
        "end": "exit",
        "printc": "printc",
        "printi": "printn",
        "readc": "cin",
        "readi": "nin"
      },
      "usage": ["enum", "debug"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.js (4/4)",
      "mnemonics": {
        "push": "push",
        "dup": "duplicate",
        "copy": "duplicate",
        "swap": "swap",
        "drop": "pop",
        "slide": "discard",
        "add": "add",
        "sub": "sub",
        "mul": "mult",
        "div": "div",
        "mod": "mod",
        "store": "heapPut",
        "retrieve": "heapGet",
        "label": "set label",
        "call": "call",
        "jmp": "jump",
        "jz": "jumpZero",
        "jn": "jumpLessZero",
        "ret": "return",
        "end": "exit",
        "printc": "writeChar",
        "printi": "writeNumber",
        "readc": "readChar",
        "readi": "readNumber"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.py (1/7)",
      "mnemonics": {
        "dup": "dup",
        "swap": "swap",
        "drop": "discard",
        "div": "div",
        "mod": "mod",
        "store": "heap_put",
        "retrieve": "heap_get",
        "call": "call",
        "jmp": "jump",
        "ret": "ret",
        "end": "exit",
        "printc": "out_char",
        "printi": "out_num",
        "readc": "in_char",
        "readi": "in_num"
      },
      "usage": ["enum"],
      "notes": "The unrepresented instructions are implemented, but unnamed."
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.py (5/7)",
      "mnemonics": {
        "push": ["PUSH_STACK", "push_stack"],
        "dup": ["DUPLICATE_TOP", "duplicate_top"],
        "copy": ["DUPLICATE_NTH", "duplicate_nth"],
        "swap": ["SWAP_FIRST_TWO", "swap_first_two"],
        "drop": ["DISCARD_TOP", "discard_top"],
        "slide": ["DISCARD_TOP_N", "discard_top_n"],
        "add": ["ADDITION", "addition"],
        "sub": ["SUBTRACTION", "subtraction"],
        "mul": ["MULTIPLICATION", "multiplication"],
        "div": ["DIVISION", "division"],
        "mod": ["MODULUS", "modulo"],
        "store": ["STORE", "heap_store"],
        "retrieve": ["RETRIEVE", "heap_retrieve"],
        "label": ["MARK_LOCATION", "mark_location"],
        "call": ["CALL_SUBROUTINE", "call_subroutine"],
        "jmp": ["JUMP", "jump"],
        "jz": ["JUMP_IF_ZERO", "jump_if_zero"],
        "jn": ["JUMP_IF_LT_ZERO", "jump_if_lt_zero"],
        "ret": ["EXIT_SUBROUTINE", "exit_subroutine"],
        "end": ["EXIT", "exit_program"],
        "printc": ["POP_PRINT_CHR", "pop_print_chr"],
        "printi": ["POP_PRINT", "pop_print"],
        "readc": ["READ_CHAR", "read_char"],
        "readi": ["READ_NUMBER", "read_number"]
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.ts (2/5)",
      "mnemonics": {
        "push": "PushNumberCommand",
        "dup": "DuplicateTopValue",
        "copy": "DuplicateValueAtPosition",
        "swap": "SwapTopTwoValues",
        "drop": "DiscardTopValue",
        "slide": "RemoveNValuesUnderTop",
        "add": "Add",
        "sub": "Subtract",
        "mul": "Multiply",
        "div": "Divide",
        "mod": "Modulus",
        "store": "StoreAAtAddressB",
        "retrieve": "PopAThenPushHeapAddressA",
        "label": "NewLabelCommand",
        "call": "CallSubroutineCommand",
        "jmp": "JumpToCommand",
        "jz": "PopAndJumpIf ==",
        "jn": "PopAndJumpIf <=",
        "ret": "ExitSubroutine",
        "end": "ExitProgram",
        "printc": "OutputChar",
        "printi": "OutputNumber",
        "readc": "InputCharToHeap",
        "readi": "InputNumberToHeap"
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.ts (4/5)",
      "mnemonics": {
        "push": ["STACK_PUSH", "Push"],
        "dup": ["STACK_DUPLICATE_ONE", "DuplicateOne"],
        "copy": ["STACK_DUPLICATE_NTH", "DuplicateNth"],
        "swap": ["STACK_SWAP", "Swap"],
        "drop": ["STACK_DISCARD_ONE", "DiscardOne"],
        "slide": ["STACK_DISCARD_MANY", "DiscardMany"],
        "add": ["ARITHMETICS_SUM", "Sum"],
        "sub": ["ARITHMETICS_SUBTRACT", "Subtract"],
        "mul": ["ARITHMETICS_MUL", "Mul"],
        "div": ["ARITHMETICS_DIV", "Div"],
        "mod": ["ARITHMETICS_MOD", "Mod"],
        "store": ["HEAP_STORE", "Store"],
        "retrieve": ["HEAP_PUSH", "HeapPushInStack"],
        "label": "FLOW_CONTROL_MARK",
        "call": ["FLOW_CONTROL_SUB_CALL", "SubCall"],
        "jmp": ["FLOW_CONTROL_JUMP", "Jump"],
        "jz": ["FLOW_CONTROL_JUMP_ZERO", "JumpZero"],
        "jn": ["FLOW_CONTROL_JUMP_LESS", "JumpLess"],
        "ret": ["FLOW_CONTROL_SUB_EXIT", "SubExit"],
        "end": ["FLOW_CONTROL_EXIT", "Exit"],
        "printc": ["IO_OUTPUT_CHARACTER", "OutputCharacter"],
        "printi": ["IO_OUTPUT_NUMBER", "OutputNumber"],
        "readc": ["IO_READ_CHARACTER", "ReadCharacter"],
        "readi": ["IO_READ_NUMBER", "ReadNumber"]
      },
      "usage": ["enum"]
    },
    {
      "source": "2 kyu/Whitespace Interpreter/solution.ts (5/5)",
      "mnemonics": {
        "push": "push-onto-stack",
        "dup": "duplicate-stack-top",
        "copy": "duplicate-stack-n",
        "swap": "swap-stack-top",
        "drop": "discard-top",
        "slide": "discard-n",
        "add": "addition",
        "sub": "subtraction",
        "mul": "multiplication",
        "div": "division",
        "mod": "modulo",
        "store": "heap-write",
        "retrieve": "heap-read",
        "label": "mark-label",
        "call": "call-subroutine",
        "jmp": "jump",
        "jz": "jump-if-zero",
        "jn": "jump-if-lt-zero",
        "ret": "exit-subroutine",
        "end": "exit",
        "printc": "pop-out-char",
        "printi": "pop-out-num",
        "readc": "read-in-char",
        "readi": "read-in-num"
      },
      "usage": ["enum"]
    }
  ],
  "run_errors": "Needs Codewars entrypoints",
  "commands": [
    { "type": "interpreter", "bin": "2 kyu/Whitespace Interpreter/solution.py" },
    { "type": "interpreter", "bin": "2 kyu/Whitespace Interpreter/solution.coffee" },
    { "type": "interpreter", "bin": "2 kyu/Whitespace Interpreter/solution.cpp" },
    { "type": "interpreter", "bin": "2 kyu/Whitespace Interpreter/solution.java" },
    { "type": "interpreter", "bin": "2 kyu/Whitespace Interpreter/solution.js" },
    { "type": "interpreter", "bin": "2 kyu/Whitespace Interpreter/solution.ts" }
  ],
  "notes": "This appears to be an amalgamation of Codewars solutions by many authors. There are 5 CoffeeScript, 3 C++, 3 Java, 4 JavaScript, 7 Python, and 5 TypeScript solutions. The diversity in mnemonics and approaches suggests a different understanding of the problem by different people, instead of incremental improvements by one author. This is supported by 2 kyu/Whitespace Interpreter/solution.ts having the another author's username pasted at 2147-2153 between two solutions, instead of the usual underscore separator."
}
