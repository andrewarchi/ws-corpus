{
  "id": "python/cybis-hapyli",
  "name": "HaPyLi",
  "authors": ["Kevin (Cybis)"],
  "license": "none",
  "languages": ["Python"],
  "tags": ["language", "interpreter", "standard library", "programs"],
  "date": "2009-01-25 05:35:53 +0000",
  "spec_version": "0.3",
  "source": [
    "https://github.com/wspace/cybis-hapyli",
    "https://wspace.github.io/cybis-hapyli/",
    "https://github.com/thaliaarchi/repo-archival/blob/main/scripts/cybis/hapyli.sh",
    "https://esolangs.org/wiki/HaPyLi",
    "https://web.archive.org/web/20110212015726/http://hapyli.webs.com:80/",
    "https://what.thedailywtf.com/topic/5980/stupid-coding-tricks-sudoku-solver-in-whitespace",
    "https://web.archive.org/web/20131109103417/http://compsoc.dur.ac.uk:80/archives/whitespace/2009-November/000072.html",
    "https://web.archive.org/web/20130926170259/http://compsoc.dur.ac.uk:80/archives/whitespace/2010-May/000075.html",
    "https://pastebin.com/f761fc4b5",
    "https://stackoverflow.com/questions/607830/use-of-haskell-state-monad-a-code-smell"
  ],
  "whitespace": { "extension": "ws" },
  "assembly": {
    "mnemonics": {
      "push": "push",
      "dup": "dup",
      "copy": "copy",
      "swap": "swap",
      "drop": "pop",
      "slide": "slide",
      "add": "add",
      "sub": "sub",
      "mul": "mul",
      "div": "div",
      "mod": "mod",
      "store": "store",
      "retrieve": "load",
      "label": "label",
      "call": "call",
      "jmp": "jump",
      "jz": "jz",
      "jn": "jn",
      "ret": "ret",
      "end": "end",
      "printc": "pc",
      "printi": "pn",
      "readc": "rc",
      "readi": "rn"
    },
    "case_sensitive_mnemonics": true,
    "instruction_delimiter": "space",
    "instruction_wrap": true,
    "usage": ["language", "programs"]
  },
  "programs": [
    { "path": "programs/99bottles.hpl", "generated": "programs/99bottles.ws", "spec_version": "0.3" },
    { "path": "programs/brainfuck.hpl", "generated": "programs/brainfuck.ws", "spec_version": "0.3" },
    { "path": "programs/sudoku.hpl", "generated": "programs/sudoku.ws", "spec_version": "0.3" },
    { "path": "stdlib/base.hpl", "generated": "stdlib/base.ws", "spec_version": "0.3" },
    { "path": "stdlib/list.hpl", "generated": "stdlib/list.ws", "spec_version": "0.3" },
    { "path": "tutorial/alloc.hpl", "generated": "tutorial/alloc.ws", "spec_version": "0.3" },
    { "path": "tutorial/asmcall.hpl", "generated": "tutorial/asmcall.ws", "spec_version": "0.3" },
    { "path": "tutorial/asmparams.hpl", "generated": "tutorial/asmparams.ws", "spec_version": "0.3" },
    { "path": "tutorial/count.hpl", "generated": "tutorial/count.ws", "spec_version": "0.2" },
    { "path": "tutorial/do.hpl", "generated": "tutorial/do.ws", "spec_version": "0.3" },
    { "path": "tutorial/execute.hpl", "generated": "tutorial/execute.ws", "spec_version": "0.3" },
    { "path": "tutorial/globals.hpl", "generated": "tutorial/globals.ws", "spec_version": "0.3" },
    { "path": "tutorial/hello.hpl", "generated": "tutorial/hello.ws", "spec_version": "0.3" },
    { "path": "tutorial/if.hpl", "generated": "tutorial/if.ws", "spec_version": "0.3" },
    { "path": "tutorial/inline_labels.hpl", "spec_version": "0.3" },
    { "path": "tutorial/inline.hpl", "generated": "tutorial/inline.ws", "spec_version": "0.3" },
    { "path": "tutorial/literal.hpl", "generated": "tutorial/literal.ws", "spec_version": "0.3" },
    { "path": "tutorial/params.hpl", "generated": "tutorial/params.ws", "spec_version": "0.3" },
    { "path": "tutorial/pointers.hpl", "generated": "tutorial/pointers.ws", "spec_version": "0.3" },
    { "path": "tutorial/power1.hpl", "generated": "tutorial/power1.ws", "spec_version": "0.3" },
    { "path": "tutorial/power2.hpl", "generated": "tutorial/power2.ws", "spec_version": "0.3" },
    { "path": "tutorial/prompt.hpl", "generated": "tutorial/prompt.ws", "spec_version": "0.3" }
  ]
}
