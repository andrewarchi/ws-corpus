{
  "id": "java/vyo-kairos",
  "name": "Kairos",
  "authors": ["Manu Weidmann"],
  "license": "MIT",
  "languages": ["Java"],
  "tags": ["interpreter", "assembler", "disassembler", "arbitrary precision", "programs"],
  "date": "2014-05-10 06:51:25 -0700",
  "spec_version": "0.3",
  "source": ["https://github.com/vyo/kairos"],
  "submodules": [{ "path": "kairos", "url": "https://github.com/vyo/kairos" }],
  "whitespace": { "extension": "ws" },
  "assembly": {
    "mnemonics": {
      "push": ["push", "push <number>", "push <string>"],
      "dup": "dupl",
      "copy": "copy",
      "swap": "swap",
      "drop": "pop",
      "slide": "slide",
      "add": "add",
      "sub": "sub",
      "mul": "mul",
      "div": "div",
      "mod": "mod",
      "store": "store",
      "retrieve": "get",
      "label": "label",
      "call": "call",
      "jmp": "jump",
      "jz": "jzero",
      "jn": "jneg",
      "ret": "ret",
      "end": "exit",
      "printc": "printc",
      "printi": "printn",
      "readc": "readc",
      "readi": "readn"
    },
    "macros": [{ "name": "import" }],
    "patterns": { "label": "([ -~]|$\\d+)+", "number": "\\d+|[0O]x[0-9A-Fa-f]+|b[01]+", "string": ".+" },
    "line_comments": ["//"],
    "indentation": "",
    "usage": ["assembler", "programs"],
    "extension": "wsa"
  },
  "mappings": [{ "space": "[Space]", "tab": "[Tab]", "lf": "[LF]" }],
  "programs": [
    { "path": "wsa_examples/elGamalDecrypt.wsa", "spec_version": "0.2" },
    { "path": "wsa_examples/elGamalEncrypt.wsa", "spec_version": "0.2" },
    { "path": "wsa_examples/elGamalInteractive.wsa", "spec_version": "0.2" },
    { "path": "wsa_examples/rec.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/abs.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/addH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/addHH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/arrayDelete.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/arrayGet.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/arrayNew.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/arrayResize.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/arrayReverse.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/arraySet.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/arraySize.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/bitwiseAnd.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/bitwiseNot.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/bitwiseOr.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/bitwiseXor.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/call.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/charAppend.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/charDetach.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/divH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/divHH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/equal.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/get.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/getBitWidth.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/getSignBit.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/greaterThan.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/intAppend.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/intDetach.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/isPrime.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/lessThan.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/log.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/log2.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/logicalAnd.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/logicalNot.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/logicalOr.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/logicalXor.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/loopCond.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/loopInc.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/loopInit.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/max.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/modH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/modHH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/mulH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/mulHH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/pow.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/powMod.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/printcln.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/println.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/printnln.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/readNumber.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/remove.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/shiftLeft.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/shiftRight.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/signum.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/stringNew.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/stringPrint.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/stringRead.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/subH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/subHH.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/tt800GetRandom.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/tt800GetRandomRange.wsa", "spec_version": "0.3" },
    { "path": "wsa_functions/tt800Init.wsa", "spec_version": "0.2" },
    { "path": "wsa_functions/twosComplement.wsa", "spec_version": "0.2" }
  ],
  "commands": [
    {
      "type": "multiple",
      "bin": "build/libs/kairos-1.0.0-all.jar",
      "subcommands": [
        { "name": "", "desc": "Interactive" },
        { "name": "import", "desc": "Importer", "usage": "import <source> <destination>" },
        { "name": "run", "desc": "Interpreter", "usage": "run <file>" },
        {
          "name": "translate",
          "desc": "Translator",
          "usage": "translate <file>",
          "input": "<file:no_ext>.ws or <file:no_ext>.wsa",
          "output": "<file:no_ext>.wsa or <file:no_ext>.ws"
        },
        { "name": "weave", "desc": "Weaver", "usage": "weave <code> <carrier>" }
      ],
      "notes": "Importer creates .wsi files"
    }
  ],
  "notes": "Has ElGamal encryption and decryption written Whitespace assembly"
}
