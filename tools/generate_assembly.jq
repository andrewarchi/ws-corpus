# Generate assembly.md

def wrap_code:
  if . == "" then "\"\"" else "`\(.)`" end;
def count_each:
  group_by(.) | sort_by(-length) |
  map((.[0] | wrap_code) + if length != 1 then " (\(length | tostring))" else "" end);

(
  (["push", "dup", "copy", "swap", "drop", "slide",
    "add", "sub", "mul", "div", "mod", "store", "retrieve",
    "label", "call", "jmp", "jz", "jn", "ret", "end",
    "printc", "printi", "readc", "readi",
    "shuffle", "dumpstack", "dumpheap", "dumptrace" | {key:., value:[]}] |
    from_entries) as $keys |
  map(
    .id as $id |
    .assembly.mnemonics | select(. != null) |
    to_entries[] |
    . as $entry |
    .value |= (
      if type == "array" then . else [.] end |
      map(
        ascii_downcase |
        gsub("^(stack|stk|arith|arithmetic|art|math|calc|infix|heap|hep|mem|flow|flw|fc|io|iop)[ ._-]|^(mod|[samchfi])[._-]"; "") |
        gsub("( ([.%lf]?<[a-z_]+>|<<[a-z_]+>>|_))+$"; "")) |
      unique)) |
  reduce .[] as $inst ($keys; .[$inst.key] += $inst.value)
) as $mnemonics |

"# Whitespace assembly

<!-- Generated by tools/generate_assembly.jq; DO NOT EDIT. -->

## Mnemonics by instruction

These are the mnemonics used by known Whitespace assembly dialects for
instructions, ranked by popularity.
",
(
  $mnemonics | to_entries[].value |
  "- " + (count_each | join(", "))
),
"
## Conflicting mnemonics
",
(
  $mnemonics | to_entries |
  map({mnemonic:.value[], instruction:.key}) |
  group_by(.mnemonic)[] |
  {
    mnemonic: .[0].mnemonic,
    instructions: map(.instruction) | count_each,
  } |
  select(.instructions | length > 1) |
  "- \(.mnemonic | wrap_code): \(.instructions | join(", "))"
),
"
## File extensions
",
(
  map(.assembly.extension | select(. != null)) |
  "- " + count_each[]
),
(
  map(
    select(.tags != null) |
    select(.tags | contains(["assembler"]) or contains(["disassembler"])) |
    select(.assembly.mnemonics == null) |
    "- " + (.id // "“\(.name)” by " + (.authors|join(", ")))) |
  sort |
  if length == 0 then empty
  else "", "## Need documentation", "", .[] end
)
