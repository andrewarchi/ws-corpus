{
  "id": "typescript/voliva-wsa",
  "name": "WSA",
  "authors": ["Victor Oliva"],
  "license": "MIT",
  "languages": ["TypeScript"],
  "tags": ["assembler", "interpreter", "debugger", "IDE"],
  "date": "2024-06-20 08:24:23 +0800",
  "spec_version": "0.3",
  "source": [
    "https://github.com/voliva/wsa",
    "https://voliva.github.io/wsa/",
    "https://github.com/wspace/corpus/issues/5"
  ],
  "submodules": [{ "path": "wsa", "url": "https://github.com/voliva/wsa" }],
  "whitespace": {
    "nonstandard": [
      { "name": "or", "seq": "TSLS", "desc": "bitwise OR" },
      { "name": "not", "seq": "TSLT", "desc": "bitwise complement" },
      { "name": "and", "seq": "TSLL", "desc": "bitwise AND" },
      { "name": "dbg", "seq": "LLS", "desc": "breakpoint" }
    ],
    "extension": "wspace"
  },
  "assembly": [
    {
      "mnemonics": {
        "push": "push",
        "dup": "dup",
        "copy": "copy",
        "swap": "swap",
        "drop": "pop",
        "slide": "slide",
        "add": "add",
        "sub": "sub",
        "mul": "mul",
        "div": "div",
        "mod": "mod",
        "store": "store",
        "retrieve": "retrieve",
        "label": "mark",
        "call": "call",
        "jmp": "jmp",
        "jz": "jmpz",
        "jn": "jmpn",
        "ret": "ret",
        "end": "exit",
        "printc": "outc",
        "printi": "outn",
        "readc": "readc",
        "readi": "readn"
      },
      "patterns": { "label": "label_{n}" },
      "usage": ["debugger", "enum"],
      "extension": "wsa",
      "notes": "Extension instructions `or`, `not`, `and`, and `dbg` are included here with those mnemonics. Labels are disassembled as `label_{n}` with the parsed unsigned integer, unless the source was wsa."
    },
    {
      "mnemonics": {
        "push": "push",
        "dup": "dup",
        "copy": "copy",
        "swap": "swap",
        "drop": "pop",
        "slide": "slide",
        "add": "add",
        "sub": "sub",
        "mul": "mul",
        "div": "div",
        "mod": "mod",
        "store": "store",
        "retrieve": "retrieve",
        "label": "label",
        "call": "call",
        "jmp": "jump",
        "jz": "jumpz",
        "jn": "jumpn",
        "ret": "ret",
        "end": "exit",
        "printc": "outc",
        "printi": "outn",
        "readc": "readc",
        "readi": "readn"
      },
      "macros": [
        { "name": "and" },
        { "name": "or" },
        { "name": "not" },
        { "name": "storestr" },
        { "name": "jumpp" },
        { "name": "jumpnz" },
        { "name": "jumppz" },
        { "name": "jumppn" },
        { "name": "jumpnp" },
        { "name": "valuestring" },
        { "name": "valueinteger" },
        { "name": "dbg" },
        { "name": "import" }
      ],
      "line_comments": [";"],
      "usage": ["assembler"]
    }
  ],
  "mappings": [
    {
      "space": "[Space]",
      "tab": "[Tab]",
      "lf": "[LF]",
      "notes": "Mapped from in the `run` subcommand when the source program contains `[LF]`"
    },
    {
      "space": "S ",
      "tab": "T\t",
      "lf": "N\n",
      "notes": "Used when formatting opcodes in parse errors and in assembler output when `withAnnotations` is enabled (hardcoded disabled)"
    }
  ],
  "programs": [
    { "path": "playground.wsa", "spec_version": "0.3" },
    { "path": "examples/keccak.wsa", "generated": "examples/keccak.ws", "spec_version": "0.3" },
    { "path": "src/experiments/hello-world.ts", "spec_version": "0.2" },
    { "path": "src/experiments/cat.ts", "spec_version": "0.2" },
    {
      "path": "src/wsa/lib/bitwise.extensions.wsa",
      "spec_version": "0.3",
      "notes": "Bitwise operations implemented with extension instructions"
    },
    {
      "path": "src/wsa/lib/bitwise.wsa",
      "spec_version": "0.3",
      "notes": "Bitwise operations implemented without extension instructions"
    },
    { "path": "src/wsa/lib/io.wsa", "spec_version": "0.2" },
    { "path": "src/wsa/lib/math.wsa", "spec_version": "0.2" },
    { "path": "src/wsa/lib/memory.wsa", "spec_version": "0.3" },
    { "path": "wsa-tests/arithmetic.wsa", "spec_version": "0.2" },
    { "path": "wsa-tests/count.wsa", "spec_version": "0.2" },
    { "path": "wsa-tests/heap.wsa", "spec_version": "0.2" },
    { "path": "wsa-tests/hello_world.wsa", "spec_version": "0.2" },
    { "path": "wsa-tests/jumps.wsa", "spec_version": "0.2" },
    { "path": "wsa-tests/swap.wsa", "spec_version": "0.2" },
    { "path": "wsa-tests/regress/case_folding.wsa", "spec_version": "0.3" },
    { "path": "wsa-tests/regress/ignored_arguments.wsa", "spec_version": "0.2" },
    {
      "path": "wsa-tests/regress/internal_label_conflict_after.wsa",
      "generated": "wsa-tests/regress/internal_label_conflict_after.ws",
      "spec_version": "0.2"
    },
    {
      "path": "wsa-tests/regress/internal_label_conflict_before.wsa",
      "generated": "wsa-tests/regress/internal_label_conflict_before.ws",
      "spec_version": "0.2"
    },
    { "path": "wsa-tests/regress/storestr_char.wsa", "spec_version": "0.2" }
  ],
  "commands": [
    {
      "bin": "wsa",
      "option_parse": "JavaScript Commander.js",
      "subcommands": [
        {
          "name": "compile",
          "desc": "Compile assembly file into whitespace",
          "usage": "compile [--extensions] <main> <output>",
          "input": "<main>",
          "output": "<output>",
          "options": [
            { "long": "extensions", "desc": "use extension instructions" },
            { "short": "h", "long": "help", "desc": "display help for command" }
          ]
        },
        {
          "name": "run",
          "desc": "Run a whitespace program",
          "usage": "run [--asm] <file>",
          "input": "<file>",
          "options": [
            { "long": "asm", "desc": "assemble before running" },
            { "short": "h", "long": "help", "desc": "display help for command" }
          ]
        },
        { "name": "help", "usage": "help [compile | run]" }
      ]
    }
  ]
}
