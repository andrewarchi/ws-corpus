{
  "id": "rebol/hostilefork",
  "name": "%whitespace.reb",
  "authors": ["Brian Dickens (Hostile Fork)"],
  "license": "MIT",
  "languages": ["Rebol", "Ren-C"],
  "tags": ["interpreter", "mapping"],
  "date": "2009-10-08",
  "spec_version": "0.3",
  "source": [
    "https://github.com/hostilefork/rebol-whitespacers",
    "https://github.com/hostilefork/whitespacers",
    "https://forum.rebol.info/t/whitespace-interpreter-revisited/1482",
    "https://gist.github.com/hostilefork/8628820",
    "https://github.com/wspace/corpus/pull/2"
  ],
  "submodules": [{ "path": "rebol-whitespacers", "url": "https://github.com/hostilefork/rebol-whitespacers" }],
  "whitespace": { "extension": "ws" },
  "assembly": {
    "mnemonics": {
      "push": "push",
      "dup": "duplicate-top",
      "copy": "duplicate-indexed",
      "swap": "swap-top-2",
      "drop": "discard-top",
      "slide": "slide-n-values",
      "add": "add",
      "sub": "subtract",
      "mul": "multiply",
      "div": "divide",
      "mod": "modulo",
      "store": "store",
      "retrieve": "retrieve",
      "label": "mark-location",
      "call": "call-subroutine",
      "jmp": "jump-to-label",
      "jz": "jump-if-zero",
      "jn": "jump-if-negative",
      "ret": "return-from-subroutine",
      "end": "end-program",
      "printc": "output-character-on-stack",
      "printi": "output-number-on-stack",
      "readc": "read-character-to-location",
      "readi": "read-number-to-location"
    },
    "usage": ["enum"]
  },
  "mappings": [
    {
      "space": "space",
      "tab": "tab",
      "lf": "lf",
      "spaces_between": true,
      "line_comment": ";",
      "extension": "wsw"
    }
  ],
  "programs": [
    {
      "path": "examples/calc.ws",
      "inputs": ["tests/calc.in"],
      "outputs": ["tests/calc.out"],
      "equivalent": "calc.ws",
      "spec_version": "0.2"
    },
    {
      "path": "examples/count.ws",
      "outputs": ["tests/count.out"],
      "equivalent": "count.ws",
      "spec_version": "0.2"
    },
    {
      "path": "examples/count.wsw",
      "outputs": ["tests/count.out"],
      "mapping_index": 0,
      "equivalent": "count.ws",
      "spec_version": "0.2"
    },
    {
      "path": "examples/fact.ws",
      "inputs": ["tests/fact.in"],
      "outputs": ["tests/fact.out"],
      "equivalent": "fact.ws",
      "spec_version": "0.2"
    },
    {
      "path": "examples/hanoi.ws",
      "inputs": ["tests/hanoi.in"],
      "outputs": ["tests/hanoi.out"],
      "equivalent": "hanoi.ws",
      "spec_version": "0.2"
    },
    {
      "path": "examples/hworld.ws",
      "outputs": ["tests/hworld.out"],
      "equivalent": "hworld.ws",
      "spec_version": "0.2"
    },
    {
      "path": "examples/loctest.ws",
      "inputs": ["tests/loctest.in"],
      "outputs": ["tests/loctest.out"],
      "equivalent": "loctest.ws",
      "spec_version": "0.3"
    },
    {
      "path": "examples/name.ws",
      "inputs": ["tests/name.in"],
      "outputs": ["tests/name.out"],
      "equivalent": "name.ws",
      "spec_version": "0.2"
    }
  ],
  "build_errors": "Bootstrapping issues",
  "commands": [
    {
      "type": "interpreter",
      "bin": "whitespace.reb",
      "dependencies": ["Ren-C"],
      "usage": "r3 $0 <file>",
      "options": [
        {
          "short": "v",
          "long": "verbose",
          "arg": "level",
          "type": "enum",
          "desc": "Verbosity level for debug output",
          "values": [
            { "values": ["0"], "desc": "(default)" },
            { "values": ["1"] },
            { "values": ["2"] },
            { "values": ["3"] }
          ]
        },
        { "long": "strict", "desc": "Only allow `.ws`, `.wsa`, and `.wsw` formats" }
      ],
      "option_parse": "manual",
      "notes": "Implementation is using a pure usermode PARSE dialect prototype, slowness is to be expected."
    },
    {
      "type": "interpreter",
      "bin": "historical/whitespace-old.reb",
      "dependencies": ["Rebol 3"],
      "usage": "r3 $0",
      "notes": "Program is hardcoded to the tutorial annotated example. Prints instructions while executing."
    }
  ]
}
